openapi: 3.0.1
info:
  title: Library Service
  version: "1.0"
servers:
  - url: http://localhost:8080
paths:
  /manage/health:
    get:
      summary: Проверка живости сервиса
      operationId: health
      responses:
        "200":
          description: Сервис жив

  /api/v1/libraries:
    get:
      summary: Получить список библиотек в городе
      operationId: listLibraries
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: city
          in: query
          required: true
          description: Город
          schema:
            type: string
      responses:
        "200":
          description: Список библиотек в городе
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LibraryPaginationResponse"

  /api/v1/libraries/{libraryUid}/books:
    get:
      summary: Получить список книг в выбранной библиотеке
      operationId: listBooks
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: showAll
          in: query
          required: false
          schema:
            type: boolean
        - name: libraryUid
          in: path
          required: true
          description: UUID библиотеки
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Список книг библиотеке
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LibraryBookPaginationResponse"

  /api/v1/libraries/{libraryUid}:
    get:
      summary: Получить информацию о библиотеке
      operationId: getLibrary
      parameters:
        - name: libraryUid
          in: path
          required: true
          description: UUID библиотеки
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Информация о библиотеке
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LibraryResponse"

  /api/v1/books/{bookUid}:
    get:
      summary: Получить информацию о книге
      operationId: getBook
      parameters:
        - name: bookUid
          in: path
          required: true
          description: UUID книги
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Информация о книге
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookInfo"

  /api/v1/libraries/{libraryUid}/books/{bookUid}:
    post:
      summary: Взять книгу в библиотеке
      operationId: takeBook
      tags:
        - Gateway API
      parameters:
        - name: libraryUid
          in: path
          required: true
          description: UUID библиотеки
          schema:
            type: string
            format: uuid
        - name: bookUid
          in: path
          required: true
          description: UUID книги
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Книга получена
        "400":
          description: Ошибка валидации данных
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationErrorResponse"

  /api/v1/libraries/{libraryUid}/books/{bookUid}/return:
    post:
      summary: Вернуть книгу в библиотеку
      operationId: returnBook
      tags:
        - Gateway API
      parameters:
        - name: libraryUid
          in: path
          required: true
          description: UUID библиотеки
          schema:
            type: string
            format: uuid
        - name: bookUid
          in: path
          required: true
          description: UUID книги
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReturnBookRequest"
      responses:
        "200":
          description: Книга возвращена
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ViolationStatus"
        "400":
          description: Ошибка валидации данных
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationErrorResponse"

components:
  schemas:
    LibraryPaginationResponse:
      type: object
      required:
        - totalElements
        - items
      example:
        {
          "page": 1,
          "pageSize": 1,
          "totalElements": 1,
          "items": [
            {
              "libraryUid": "83575e12-7ce0-48ee-9931-51919ff3c9ee",
              "name": "Библиотека имени 7 Непьющих",
              "address": "2-я Бауманская ул., д.5, стр.1",
              "city": "Москва"
            }
          ]
        }
      properties:
        page:
          type: integer
          description: Номер страницы
        pageSize:
          type: integer
          description: Количество элементов на странице
        totalElements:
          type: integer
          description: Общее количество элементов
        items:
          type: array
          items:
            $ref: "#/components/schemas/LibraryResponse"

    LibraryResponse:
      type: object
      required:
        - libraryUid
        - name
        - address
        - city
      example:
        {
          "libraryUid": "83575e12-7ce0-48ee-9931-51919ff3c9ee",
          "name": "Библиотека имени 7 Непьющих",
          "address": "2-я Бауманская ул., д.5, стр.1",
          "city": "Москва"
        }
      properties:
        libraryUid:
          type: string
          description: UUID библиотеки
          format: uuid
        name:
          type: string
          description: Название библиотеки
        address:
          type: string
          description: Адрес библиотеки
        city:
          type: string
          description: Город, в котором находится библиотека

    LibraryBookPaginationResponse:
      type: object
      required:
        - totalElements
        - items
      example:
        {
          "page": 1,
          "pageSize": 1,
          "totalElements": 1,
          "items": [
            {
              "bookUid": "f7cdc58f-2caf-4b15-9727-f89dcc629b27",
              "name": "Краткий курс C++ в 7 томах",
              "author": "Бьерн Страуструп",
              "genre": "Научная фантастика",
              "condition": "EXCELLENT",
              "availableCount": 1
            }
          ]
        }
      properties:
        page:
          type: integer
          description: Номер страницы
        pageSize:
          type: integer
          description: Количество элементов на странице
        totalElements:
          type: integer
          description: Общее количество элементов
        items:
          type: array
          items:
            $ref: "#/components/schemas/LibraryBookResponse"

    LibraryBookResponse:
      type: object
      required:
        - bookUid
        - name
        - author
        - genre
        - condition
        - availableCount
      example:
        {
          "bookUid": "f7cdc58f-2caf-4b15-9727-f89dcc629b27",
          "name": "Краткий курс C++ в 7 томах",
          "author": "Бьерн Страуструп",
          "genre": "Научная фантастика",
          "condition": "EXCELLENT",
          "availableCount": 1
        }
      properties:
        bookUid:
          type: string
          description: UUID книги
          format: uuid
        name:
          type: string
          description: Название книги
        author:
          type: string
          description: Автор
        genre:
          type: string
          description: Жанр
        condition:
          type: string
          description: Состояние книги
          enum:
            - EXCELLENT
            - GOOD
            - BAD
        availableCount:
          type: integer
          description: Количество книг, доступных для аренды в библиотеке

    ReturnBookRequest:
      type: object
      required:
        - condition
      example:
        {
          "condition": "EXCELLENT"
        }
      properties:
        condition:
          type: string
          description: Состояние книги
          enum:
            - EXCELLENT
            - GOOD
            - BAD

    ViolationStatus:
      type: object
      required:
        - violation
      properties:
        violation:
          type: boolean
          description: Нарушены ли правила возврата книг

    BookInfo:
      type: object
      required:
        - bookUid
        - name
        - author
        - genre
      example:
        {
          "bookUid": "f7cdc58f-2caf-4b15-9727-f89dcc629b27",
          "name": "Краткий курс C++ в 7 томах",
          "author": "Бьерн Страуструп",
          "genre": "Научная фантастика",
        }
      properties:
        bookUid:
          type: string
          description: UUID книги
          format: uuid
        name:
          type: string
          description: Название книги
        author:
          type: string
          description: Автор
        genre:
          type: string
          description: Жанр

    ErrorDescription:
      type: object
      required:
        - field
        - error
      properties:
        field:
          type: string
        error:
          type: string

    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Информация об ошибке

    ValidationErrorResponse:
      type: object
      required:
        - message
        - errors
      properties:
        message:
          type: string
          description: Информация об ошибке
        errors:
          type: array
          description: Массив полей с описанием ошибки
          items:
            $ref: "#/components/schemas/ErrorDescription"
